{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\grego\\\\source\\\\repos\\\\CmcChallenge\\\\CmcChallenge\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { ProductItemComponent } from './product-item.component';\nimport { By } from '@angular/platform-browser';\ndescribe('ProductItemComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [ProductItemComponent],\n      providers: [{\n        provide: 'BASE_URL',\n        useValue: 'http://localhost'\n      }]\n    }).compileComponents();\n  }));\n  const mockProduct = {\n    productId: 1,\n    description: 'test description',\n    name: 'test name',\n    price: 10\n  };\n  const mockCountryAus = {\n    countryId: 1,\n    conversionRateFromAud: 1,\n    currencyCode: 'AUD',\n    name: 'Australia'\n  };\n  const mockCountryFr = {\n    countryId: 2,\n    conversionRateFromAud: 0.67,\n    currencyCode: 'EUR',\n    name: 'France'\n  };\n  beforeEach(() => {\n    fixture = TestBed.createComponent(ProductItemComponent);\n    component = fixture.componentInstance;\n    component.product = mockProduct;\n    component.selectedCountry = mockCountryAus;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should display product information', () => {\n    const h3 = fixture.debugElement.query(By.css('h3')).nativeElement;\n    expect(h3.textContent).toEqual(component.product.name);\n    const p_description = fixture.nativeElement.querySelector('p.description');\n    expect(p_description.textContent).toEqual(component.product.description);\n    const p_price = fixture.nativeElement.querySelector('p.price');\n    expect(p_price.textContent.trim()).toEqual('Price : A$' + component.product.price.toFixed(2));\n  });\n  it('should display price according to country', () => {\n    component.selectedCountry = mockCountryFr;\n    fixture.detectChanges();\n    const priceEur = mockProduct.price * mockCountryFr.conversionRateFromAud;\n    const p_price = fixture.debugElement.query(By.css('p.price'));\n    expect(p_price.textContent.trim()).toEqual('Price : €' + priceEur.toFixed(2));\n  });\n});","map":{"version":3,"sources":["C:/Users/grego/source/repos/CmcChallenge/CmcChallenge/ClientApp/src/app/views/product-list/product-item/product-item.component.spec.ts"],"names":["TestBed","HttpClientTestingModule","ProductItemComponent","By","describe","component","fixture","beforeEach","configureTestingModule","imports","declarations","providers","provide","useValue","compileComponents","mockProduct","productId","description","name","price","mockCountryAus","countryId","conversionRateFromAud","currencyCode","mockCountryFr","createComponent","componentInstance","product","selectedCountry","detectChanges","it","expect","toBeTruthy","h3","debugElement","query","css","nativeElement","textContent","toEqual","p_description","querySelector","p_price","trim","toFixed","priceEur"],"mappings":"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","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { ProductItemComponent } from './product-item.component';\r\nimport { By } from '@angular/platform-browser';\r\ndescribe('ProductItemComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [HttpClientTestingModule],\r\n            declarations: [ProductItemComponent],\r\n            providers: [{ provide: 'BASE_URL', useValue: 'http://localhost' }],\r\n        }).compileComponents();\r\n    });\r\n    const mockProduct = {\r\n        productId: 1,\r\n        description: 'test description',\r\n        name: 'test name',\r\n        price: 10,\r\n    };\r\n    const mockCountryAus = {\r\n        countryId: 1,\r\n        conversionRateFromAud: 1,\r\n        currencyCode: 'AUD',\r\n        name: 'Australia',\r\n    };\r\n    const mockCountryFr = {\r\n        countryId: 2,\r\n        conversionRateFromAud: 0.67,\r\n        currencyCode: 'EUR',\r\n        name: 'France',\r\n    };\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(ProductItemComponent);\r\n        component = fixture.componentInstance;\r\n        component.product = mockProduct;\r\n        component.selectedCountry = mockCountryAus;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should display product information', () => {\r\n        const h3 = fixture.debugElement.query(By.css('h3')).nativeElement;\r\n        expect(h3.textContent).toEqual(component.product.name);\r\n        const p_description = fixture.nativeElement.querySelector('p.description');\r\n        expect(p_description.textContent).toEqual(component.product.description);\r\n        const p_price = fixture.nativeElement.querySelector('p.price');\r\n        expect(p_price.textContent.trim()).toEqual('Price : A$' + component.product.price.toFixed(2));\r\n    });\r\n    it('should display price according to country', () => {\r\n        component.selectedCountry = mockCountryFr;\r\n        fixture.detectChanges();\r\n        const priceEur = mockProduct.price * mockCountryFr.conversionRateFromAud;\r\n        const p_price = fixture.debugElement.query(By.css('p.price'));\r\n        expect(p_price.textContent.trim()).toEqual('Price : €' + priceEur.toFixed(2));\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}