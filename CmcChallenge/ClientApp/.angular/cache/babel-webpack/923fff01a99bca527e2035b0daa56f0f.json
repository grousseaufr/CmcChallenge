{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\grego\\\\source\\\\repos\\\\CmcChallenge\\\\CmcChallenge\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { of, ReplaySubject } from 'rxjs';\nimport { CountryService } from 'src/app/services/country.service';\nimport { NavMenuComponent } from './nav-menu.component';\ndescribe('OrderConfirmComponent', () => {\n  let component;\n  let fixture;\n  let mockCountryService;\n  const $currentCountry = new ReplaySubject();\n  const mockCountries = [{\n    countryId: 1,\n    conversionRateFromAud: 1,\n    currencyCode: 'AUD',\n    name: 'Australia'\n  }, {\n    countryId: 2,\n    conversionRateFromAud: 0.67,\n    currencyCode: 'EUR',\n    name: 'France'\n  }];\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientTestingModule],\n      declarations: [NavMenuComponent],\n      providers: [{\n        provide: 'BASE_URL',\n        useValue: 'http://localhost'\n      }, {\n        provide: CountryService,\n        useValue: jasmine.createSpyObj('CountryService', ['getAll'])\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(NavMenuComponent);\n    component = fixture.componentInstance;\n    mockCountryService = TestBed.get(CountryService);\n    mockCountryService.getAll.and.returnValue(of(mockCountries)); //mockCountryService.$currentCountry.and.returnValue(of(mockCountries[0]));\n\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});","map":{"version":3,"sources":["C:/Users/grego/source/repos/CmcChallenge/CmcChallenge/ClientApp/src/app/views/nav-menu/nav-menu.component.spec.ts"],"names":["HttpClientTestingModule","TestBed","of","ReplaySubject","CountryService","NavMenuComponent","describe","component","fixture","mockCountryService","$currentCountry","mockCountries","countryId","conversionRateFromAud","currencyCode","name","beforeEach","configureTestingModule","imports","declarations","providers","provide","useValue","jasmine","createSpyObj","compileComponents","createComponent","componentInstance","get","getAll","and","returnValue","detectChanges","it","expect","toBeTruthy"],"mappings":";AAAA,SAASA,uBAAT,QAAwC,8BAAxC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,EAAT,EAAaC,aAAb,QAAkC,MAAlC;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACAC,QAAQ,CAAC,uBAAD,EAA0B,MAAM;AACpC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,kBAAJ;AACA,QAAMC,eAAe,GAAG,IAAIP,aAAJ,EAAxB;AACA,QAAMQ,aAAa,GAAG,CAClB;AACIC,IAAAA,SAAS,EAAE,CADf;AAEIC,IAAAA,qBAAqB,EAAE,CAF3B;AAGIC,IAAAA,YAAY,EAAE,KAHlB;AAIIC,IAAAA,IAAI,EAAE;AAJV,GADkB,EAOlB;AACIH,IAAAA,SAAS,EAAE,CADf;AAEIC,IAAAA,qBAAqB,EAAE,IAF3B;AAGIC,IAAAA,YAAY,EAAE,KAHlB;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAPkB,CAAtB;AAcAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMf,OAAO,CAACgB,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAAClB,uBAAD,CADwB;AAEjCmB,MAAAA,YAAY,EAAE,CAACd,gBAAD,CAFmB;AAGjCe,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,OAAO,EAAE,UAAX;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OADO,EAEP;AACID,QAAAA,OAAO,EAAEjB,cADb;AAEIkB,QAAAA,QAAQ,EAAEC,OAAO,CAACC,YAAR,CAAqB,gBAArB,EAAuC,CAAC,QAAD,CAAvC;AAFd,OAFO;AAHsB,KAA/B,EAUHC,iBAVG,EAAN;AAWH,GAZS,EAAV;AAaAT,EAAAA,UAAU,CAAC,MAAM;AACbR,IAAAA,OAAO,GAAGP,OAAO,CAACyB,eAAR,CAAwBrB,gBAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACmB,iBAApB;AACAlB,IAAAA,kBAAkB,GAAGR,OAAO,CAAC2B,GAAR,CAAYxB,cAAZ,CAArB;AACAK,IAAAA,kBAAkB,CAACoB,MAAnB,CAA0BC,GAA1B,CAA8BC,WAA9B,CAA0C7B,EAAE,CAACS,aAAD,CAA5C,EAJa,CAKb;;AACAH,IAAAA,OAAO,CAACwB,aAAR;AACH,GAPS,CAAV;AAQAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAAC3B,SAAD,CAAN,CAAkB4B,UAAlB;AACH,GAFC,CAAF;AAGH,CA3CO,CAAR","sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { of, ReplaySubject } from 'rxjs';\r\nimport { CountryService } from 'src/app/services/country.service';\r\nimport { NavMenuComponent } from './nav-menu.component';\r\ndescribe('OrderConfirmComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    let mockCountryService;\r\n    const $currentCountry = new ReplaySubject();\r\n    const mockCountries = [\r\n        {\r\n            countryId: 1,\r\n            conversionRateFromAud: 1,\r\n            currencyCode: 'AUD',\r\n            name: 'Australia',\r\n        },\r\n        {\r\n            countryId: 2,\r\n            conversionRateFromAud: 0.67,\r\n            currencyCode: 'EUR',\r\n            name: 'France',\r\n        },\r\n    ];\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            imports: [HttpClientTestingModule],\r\n            declarations: [NavMenuComponent],\r\n            providers: [\r\n                { provide: 'BASE_URL', useValue: 'http://localhost' },\r\n                {\r\n                    provide: CountryService,\r\n                    useValue: jasmine.createSpyObj('CountryService', ['getAll']),\r\n                },\r\n            ],\r\n        }).compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(NavMenuComponent);\r\n        component = fixture.componentInstance;\r\n        mockCountryService = TestBed.get(CountryService);\r\n        mockCountryService.getAll.and.returnValue(of(mockCountries));\r\n        //mockCountryService.$currentCountry.and.returnValue(of(mockCountries[0]));\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}